import{a as e}from"./chunk-Y4M3I524.mjs";import{a as s}from"./chunk-YSXGDEY5.mjs";async function f(r,t,o){try{let a=await r.resolveAddress(o.wallet);return(await r.read({address:t.contractAddress,abi:e,functionName:"balanceOf",args:[a]})).value.toString()}catch(a){throw Error(`Failed to fetch balance: ${a}`)}}s(f,"balanceOf");async function u(r,t,o){try{let a=await r.resolveAddress(o.to);return(await r.sendTransaction({to:t.contractAddress,abi:e,functionName:"safeTransferFrom",args:[await r.getAddress(),a,o.tokenId]})).hash}catch(a){throw Error(`Failed to transfer: ${a}`)}}s(u,"transfer");async function p(r,t){try{return(await r.read({address:t.contractAddress,abi:e,functionName:"totalSupply"})).value.toString()}catch(o){throw Error(`Failed to fetch total supply: ${o}`)}}s(p,"totalSupply");async function l(r,t,o){try{let a=await r.resolveAddress(o.spender);return(await r.sendTransaction({to:t.contractAddress,abi:e,functionName:"approve",args:[a,o.tokenId]})).hash}catch(a){throw Error(`Failed to approve: ${a}`)}}s(l,"approve");async function A(r,t,o){try{let a=await r.resolveAddress(o.from),n=await r.resolveAddress(o.to);return(await r.sendTransaction({to:t.contractAddress,abi:e,functionName:"safeTransferFrom",args:[a,n,o.tokenId]})).hash}catch(a){throw Error(`Failed to transfer from: ${a}`)}}s(A,"transferFrom");export{f as a,u as b,p as c,l as d,A as e};
