import { EVMWalletClient } from '@goat-sdk/wallet-evm';
import { z } from 'zod';
import { getBalanceParametersSchema, transferParametersSchema, approveParametersSchema, transferFromParametersSchema } from './parameters.mjs';
import { ChainSpecificToken } from './token.mjs';

declare function balanceOf(walletClient: EVMWalletClient, token: ChainSpecificToken, parameters: z.infer<typeof getBalanceParametersSchema>): Promise<string>;
declare function transfer(walletClient: EVMWalletClient, token: ChainSpecificToken, parameters: z.infer<typeof transferParametersSchema>): Promise<string>;
declare function totalSupply(walletClient: EVMWalletClient, token: ChainSpecificToken): Promise<string>;
declare function approve(walletClient: EVMWalletClient, token: ChainSpecificToken, parameters: z.infer<typeof approveParametersSchema>): Promise<string>;
declare function transferFrom(walletClient: EVMWalletClient, token: ChainSpecificToken, parameters: z.infer<typeof transferFromParametersSchema>): Promise<string>;

export { approve, balanceOf, totalSupply, transfer, transferFrom };
